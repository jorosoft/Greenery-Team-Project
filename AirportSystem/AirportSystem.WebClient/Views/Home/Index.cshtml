@using AirportSystem.Models
@using GridMvc.Html
@model List<Flight>

@{
    ViewBag.Title = "Home Page";
}

<!-- Examples of creating a Datepicker -->
@*@Html.TextBox("YourTextBox", "", new { @class = "date-picker" })*@

<div class="alert alert-warning" role="alert">
    <h3>Schedule for</h3>
    @using (Html.BeginForm("Index", "Home", new { ReturnUrl = ViewBag.ReturnUrl }))
    {
        <input class="date-picker" name="selected" value="@ViewBag.selected" />
        <input type="submit" value="Show" />

    }
</div>

@section Scripts {

    @Scripts.Render("~/bundles/jqueryui")
    @Styles.Render("~/Content/cssjqryUi")

    <script type="text/javascript">

        $(document).ready(function () {
            $(".date-picker").datepicker({
                dateFormat: "dd-mm-yy",
                changeMonth: true,
                changeYear: true,
                yearRange: "-60:+0"
            });
        });
    </script>
}

<div class="row">
    <div class="col-md-10">  
        <div class="panel panel-default">
            <div class="panel-heading">
                <h3 class="panel-title">Arrivals</h3>
            </div>
            <div class="panel-body">
                @Html.Grid(Model.Where(x => x.FlightType.Name == "Arrivals")).Columns(columns =>
           {
           columns.Add(f => f.SheduledTime.TimeOfDay).Titled("Time").SetWidth(20);
           columns.Add(f => f.DestinationAirport.Name).Titled("Destination").SetWidth(200);
           columns.Add(f => f.Plane.Airlines.Name).Titled("Airline").SetWidth(200);
           columns.Add(f => f.Plane.Manufacturers.Name)
               .RenderValueAs(f => f.Plane.Manufacturers.Name + " " + f.Plane.Models.Name)
               .Titled("Plane").SetWidth(200);
           columns.Add().RenderValueAs(f => f.ActualTime != null ? "Landed" : "Flying").Titled("Status").SetWidth(100);
           if (User.Identity.IsAuthenticated)
           {
               columns.Add()
                .Encoded(false)
                .Sanitized(false)
                .SetWidth(50)
                .RenderValueAs(f => @<div id="edit-btn">@Html.ActionLink("Details", "FlightDetails", new { id = f.Id }, new { @class = "gridbutton" })</div>);
               columns.Add()
                    .Encoded(false)
                    .Sanitized(false)
                    .SetWidth(50)
                    .RenderValueAs(f => @<div id="edit-btn">@Html.ActionLink("Edit", "EditFlight", new { id = f.Id }, new { @class = "gridbutton" })</div>);
               columns.Add()
                    .Encoded(false)
                    .Sanitized(false)
                    .SetWidth(50)
                    .RenderValueAs(f => @<div id="delete-btn">@Html.ActionLink("Delete", "DeleteFlight", new { id = f.Id }, new { @class = "gridbutton" })</div>);
               }
           }).WithPaging(10).EmptyText("No arriving flights for this day")
            </div>
        </div>

        <div class="panel panel-default">
            <div class="panel-heading">
                <h3 class="panel-title">Departures</h3>
            </div>
            <div class="panel-body">
                @Html.Grid(Model.Where(x => x.FlightType.Name == "Departures")).Columns(columns =>
           {
           columns.Add(f => f.SheduledTime.TimeOfDay).Titled("Time").SetWidth(20);
           columns.Add(f => f.DestinationAirport.Name).Titled("Destination").SetWidth(200);
           columns.Add(f => f.Plane.Airlines.Name).Titled("Airline").SetWidth(200);
           columns.Add(f => f.Plane.Manufacturers.Name)
                    .RenderValueAs(f => f.Plane.Manufacturers.Name + " " + f.Plane.Models.Name)
                    .Titled("Plane").SetWidth(200);
           columns.Add().RenderValueAs(f => f.ActualTime != null ? "Departed" : "On Ground").Titled("Status").SetWidth(100);
           if (User.Identity.IsAuthenticated)
           {
               columns.Add()
                    .Encoded(false)
                    .Sanitized(false)
                    .SetWidth(50)
                    .RenderValueAs(f => @<div id="edit-btn">@Html.ActionLink("Details", "FlightDetails", new { id = f.Id }, new { @class = "gridbutton" })</div>);
               columns.Add()
                    .Encoded(false)
                    .Sanitized(false)
                    .SetWidth(50)
                    .RenderValueAs(f => @<div id="edit-btn">@Html.ActionLink("Edit", "EditFlight", new { id = f.Id }, new { @class = "gridbutton" })</div>);
               columns.Add()
                    .Encoded(false)
                    .Sanitized(false)
                    .SetWidth(50)
                    .RenderValueAs(f => @<div id="delete-btn">@Html.ActionLink("Delete", "DeleteFlight", new { id = f.Id }, new { @class = "gridbutton" })</div>);
               }
           }).WithPaging(10).EmptyText("No departure flights for this day")
            </div>
        </div>

    </div>
</div>